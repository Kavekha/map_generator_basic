v0.2.2
    map gen base comme classe mère des Map Gen.
    MapGen Jotaf and BrogueLike héritent de MapGenBase.

v0.2.1
    fix : generate_room prends bien en compte la room attribuée et non la previous room.
    fix : place_room utilise correctement le generate_room, avec les bons arguments.
    map generator based on Jotaf method.


PRE-RELEASE 0.2.0-Dev : basic brogue-like map gen
    Create room next to a previoulsy created room.
    If corridor activated (CORRIDOR > 0), will create a corridor then a room at the end of it.
    If ROOM_IF_NO_CORRIDOR_POSSIBLE activated (> 0), and can't create a corridor, will try to create a room instead.
    If PREVIOUS_ROOM_MAY_BE_ANY_ROOM activated (> 0), may try to create a room from a previous room instead of the last created.
    Fast enough!
    More reliable on the number of rooms created.

v0.1.4
    PREVIOUS_ROOM_MAY_BE_ANY_ROOM, CORRIDOR and ROOM_IF_NO_CORRIDOR_POSSIBLE are now % based. 100% = True, 0 = False.

v0.1.3
    Refacto map_gen pour plus de lisibilité.

v0.1.2
    If PREVIOUS_ROOM_MAY_BE_ANY_ROOM: True, la room suivante ne sera pas forcement construite pour la precedente.
    If CORRIDOR: True, a corridor of 1,10 tiles will be created if possible.
    If ROOM_IF_NO_CORRIDOR_POSSIBLE: True, a room will be created if a corridor is not possible.
    ===> Map bien plus variée.

v0.1.1
    New map gen from scratch, with experience now.
    Against slow : No action on a map each time, this will be done at the end of the process.
    generate room is generic now.
    Better method to place room next to the previous one.



PRE-RELEASE 0.1.0 : First try
    Too slow
    Hard to read
    Very hacky
    Big gap between 2 run.

v0.0.5
    Passe Black & Pylint, pour la forme.
    Retrait des directions "diagonales", sous config.
    Retrait corridor, sous config.
    Changement des MAX_ITERATION.

v0.0.4
    On reconstruit la room desormais systematiquement, on essait pas a tout pris de placer celle existante.
    Les salles ont des min/ max plus grands pour les width que pour les height.
    Constat: Autant de rooms generées, mais toujours de grands gaps. Peu de hors map. Pluss de collisions.
    On ajoute des Corridors devant la nouvelle room.
    Le corridor peut tout ecraser, rien à faire.
    Legeres modifs pour les directions, où les Rooms pouvaient être mal placées par defaut a cause des divisions.
     Constat: La map est plus sexy, et toutes les salles sont liées.
     Modifications des coordonnées selon la direction. TODO: Vraie algorithme-like.
     Constats : Formes plus sympas, mais très circulaires. Succès plus elevés, mais gros echecs encore possibles.

v0.0.3
    On construit la nouvelle salle à l'un des 8 points cardinaux autour de la salle de reference.
    Si ca ne marche pas, on essait sur les suivants.
    Point de depart de la première room : Forcement au milieu.
    Bug : Room hors de la map considéré comme dans la map.
    Bug : Room hors de contact des autres rooms (Direction fausse?)
    Bug : 4° room de reference utilisée etait la premiere. Melange dans les loops?
    Changement : 80 x 50 de taille de map.
    Best scores (Du à l'anomalie):
         >> END : Sucess : 31 - Collisions : 35 - Out of Map : 250 - Placement iteration : 285
    Cas classique:
        >> END : Sucess : 12 - Collisions : 52 - Out of Map : 492 - Placement iteration : 544

v0.0.2
    [/] Une nouvelle room doit être testée au contact de la précédente.
    Refacto.
    On genere une premiere room.
    Les rooms suivantes tentent de se placer autour de la première.
    Pour le moment, on prends des points au hasard autour de la première room.
    Pas d'intelligence, donc repetitions nombreuses et peu utiles.
    >> END : Sucess : 5 - Collisions : 25 - Out of Map : 1775 - Placement iteration : 1800

v0.0.1
    MapGen de base.
    Genere une Room, verifie qu'elle tient dans la map.
    Si elle tient dans la map, verifie qu'elle n'entre pas en collision avec une room existante.
    Si tout est OK, elle est posée sur la map. Une nouvelle generation se poursuit.
    (100 iterations, 20 success, 40 collisions, 40 out of map en moyenne).


# TODO:
    [ ] 500 Convertible en GameMap, pour usage dans jeu.
    [ ] 250 Generation de map sur la base de l'algo de Jotaf.

    [ ] 100 Si en dessous d'un min ROOM ou de 10% de moins que MAX, on refait tout.
    [ ] 250 Tests autos!

    [ ] 100 Bordure de 1 - 3 de taille, pour plus d'espaces.
    [ ] 250 Lier les rooms proches l'une à l'autre via corridors ou passages, pour plus de loops et moins de backtrack.

    [ ] 250 Une room peut être deux rectangles fusionnés, pour des formes plus sympas.
    [ ] 100 Forme aleatoire des rooms, pour eviter sentiment artificiel.
            > Sur les bords, 55% 1, 45% 0. Si 010 = 000. Si 101 = 111.

    [ ] 100 configurable, pour avoir differentes variantes selon Nature / Interieur






